# description	: Cross-platform application development framework
# depends	: zlib openssl udev zstd double-conversion glib pcre2 
# depends	: icu dbus fontconfig freetype harfbuzz libjpeg-turbo 
# depends	: libpng libdrm libxkbcommon libice libsm libx11 libxcb 
# depends	: xcb-util-cursor xcb-util-image xcb-util-keysyms 
# depends	: xcb-util-renderutil xcb-util-wm at-spi2-core mesa mtdev 
# depends	: libinput libglvnd cups gdk-pixbuf gtk3 pango sqlite 
# depends	: xorg-proto vulkan-headers

name=qt6-base
version=6.8.2
release=1
options="!asneeded"
source="https://download.qt.io/official_releases/qt/${version%.*}/$version/submodules/qtbase-everywhere-src-$version.tar.xz
        qt6.sh qt6 qt6-base-cflags.patch qt6-base-nostrip.patch 
        assistant-qt6.desktop designer-qt6.desktop linguist-qt6.desktop qdbusviewer-qt6.desktop"

build() {
    cd qtbase-everywhere-src-$version

	patch -Np1 -i "$SRC"/qt6-base-cflags.patch 
	patch -Np1 -i "$SRC"/qt6-base-nostrip.patch 

	mkdir -pv qtbase/.git

    export OPENSSL_LIBS=" -lssl -lcrypto"

    # Disable a conflicting declaration on i686 systems
    if [ "$(uname -m)" == "i686" ]; then
        sed -e "/^#elif defined(Q_CC_GNU_ONLY)/s/.*/& \&\& 0/" \
            -i src/corelib/global/qtypes.h
    fi

    cmake -B build -G Ninja \
        -D BUILD_SHARED_LIBS=ON \
        -D CMAKE_INSTALL_PREFIX=/usr \
        -D CMAKE_BUILD_TYPE=Release \
        -D CMAKE_CXX_FLAGS_RELEASE="$CXXFLAGS -flto=auto" \
        -D CMAKE_C_FLAGS_RELEASE="$CFLAGS -flto=auto" \
        -D CMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
        -D BUILD_WITH_PCH=OFF \
        -D INSTALL_BINDIR=lib/qt6/bin \
        -D INSTALL_PUBLICBINDIR=usr/bin \
        -D INSTALL_LIBEXECDIR=lib/qt6 \
        -D INSTALL_DOCDIR=share/doc/qt6 \
        -D INSTALL_ARCHDATADIR=lib/qt6 \
        -D INSTALL_DATADIR=share/qt6 \
        -D INSTALL_INCLUDEDIR=include/qt6 \
        -D INSTALL_MKSPECSDIR=lib/qt6/mkspecs \
        -D INSTALL_PLUGINSDIR=lib/qt6/plugins \
        -D INSTALL_QMLDIR=lib/qt6/qml \
        -D INSTALL_SYSCONFDIR=/etc/xdg \
        -D INSTALL_TRANSLATIONSDIR=share/qt6/translations \
        -D INSTALL_EXAMPLESDIR=share/doc/qt6/examples \
        -D QT_FEATURE_no_direct_extern_access=ON \
        -D QT_FEATURE_dbus_linked=ON \
        -D QT_FEATURE_openssl_linked=ON \
        -D QT_FEATURE_system_sqlite=ON \
        -D QT_BUILD_TESTS_BY_DEFAULT=OFF \
        -D QT_FEATURE_reduce_relocations=OFF \
        -D QT_FEATURE_androiddeployqt=OFF \
        -D QT_FEATURE_rpath=OFF \
        -D QT_FEATURE_xcb=ON \
        -D QT_FEATURE_xkbcommon_x11=ON \
        -D QT_FEATURE_syslog=ON \
        -Wno-dev
    ninja -C build
}

package() {
    cd qtbase-everywhere-src-$version

    export OPENSSL_LIBS=" -lssl -lcrypto"

    DESTDIR="$PKG" ninja -C build install

	find "$PKG"/ -name \*.prl \
		-exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

    install -Dm 755 "$SRC"/qt6.sh "$PKG"/etc/profile.d/qt6.sh
    install -Dm 644 "$SRC"/qt6 "$PKG"/etc/sudoers.d/qt6

    # Install useful symlinks
    cd "$PKG"
    mkdir -p usr/bin
    while read -r _line; do
        ln -sv $_line
    done < "$SRC"/qtbase-everywhere-src-$version/build/user_facing_tool_links.txt
}