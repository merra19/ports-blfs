# description	: Linker from the LLVM project
# depends	: llvm

name=lld
version=20.1.1
release=1
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/lld-$version.src.tar.xz
        https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/cmake-$version.src.tar.xz
        lld-import-compact_unwind_encoding.h-from-libu.patch"
noextract="cmake-$version.src.tar.xz"

getversionpkg() {
    awk 'NR==1 {print $1}' /var/lib/scratchpkg/db/$1 2>/dev/null
}

build() {
	cd $name-$version.src

    vers="$(getversionpkg llvm)"
    if [ ! "$vers" == "$version" ]; then
        echo "$name version is $vers // $version"
        exit 1
    fi

    export CFLAGS="-O2 -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=32 -Wformat -Wformat-security -Wno-error -Wl,-z,max-page-size=0x4000 -march=$MMARCH -fno-lto"
    export CXXFLAGS="$CFLAGS"
    export FFLAGS="-O2 -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=32 -Wno-error -Wl,-z,max-page-size=0x4000 -march=$MMARCH -fno-lto"
    export FCFLAGS="$FFLAGS"

	# The upstream expects it to be extracted at the same level as the llvm tarball, and 
	# the extracted directory renamed to cmake
	tar -xf ../cmake-${version}.src.tar.xz
	sed "/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-${version}.src@" -i CMakeLists.txt

	patch -p2 -i $SRC/lld-import-compact_unwind_encoding.h-from-libu.patch

	cmake -B build -G Ninja \
		-D CMAKE_INSTALL_PREFIX=/usr \
		-D CMAKE_BUILD_TYPE=Release \
		-D CMAKE_C_FLAGS_RELEASE="$CFLAGS" \
		-D CMAKE_CXX_FLAGS_RELEASE="$CXXFLAGS" \
		-D LLVM_LINK_LLVM_DYLIB=ON \
		-Wno-dev
	cmake --build build
	
}

package() {
    cd $name-$version.src

    DESTDIR=$PKG cmake --install build
}
